#!/bin/sh
#
# hornetq	This shell script takes care of starting and stopping hornetq
#
# chkconfig: - 80 20
# description: The HornetQ Webserver and Servlet Container
# processname: hornetq
# pidfile: /var/run/hornetq/hornetq.pid
# config:  /etc/hornetq/hornetq.conf
#
#
# Portions from tomcat4.init by:
#
# Gomez Henri <hgomez@users.sourceforge.net>
# Keith Irwin <keith_irwin@non.hp.com>
# Nicolas Mailhot <nicolas.mailhot@one2team.com>
#
#


# Source function library.
. /etc/init.d/functions

[ -r /etc/java/java.conf ] && . /etc/java/java.conf
export JAVA_HOME

[ -r /etc/sysconfig/hornetq ] && . /etc/sysconfig/hornetq

# if HORNETQ_USER is not set, use hornetq
if [ -z "$HORNETQ_USER" ]; then
    HORNETQ_USER="hornetq"
fi
                                                                                                                                                             
# if HORNETQ_HOME is not set, use /usr/share/hornetq
if [ -z "$HORNETQ_HOME" ]; then
    HORNETQ_HOME="/usr/share/java/hornetq"
fi

if [ -z "$SHUTDOWN_WAIT" ]; then
    SHUTDOWN_WAIT=10
fi

if [ -z "$HORNETQ_PID" ]; then
    HORNETQ_PID=/var/run/hornetq/hornetq.pid
fi

export HORNETQ_CLASSPATH="$HORNETQ_HOME/lib/netty.jar:$HORNETQ_HOME/lib/jnpserver.jar:$HORNETQ_HOME/lib/jnp-client.jar:$HORNETQ_HOME/lib/jboss-mc.jar:$HORNETQ_HOME/lib/jboss-jms-api.jar:$HORNETQ_HOME/lib/hornetq-twitter-integration.jar:$HORNETQ_HOME/lib/hornetq-spring-integration.jar:$HORNETQ_HOME/lib/hornetq-service-sar.jar:$HORNETQ_HOME/lib/hornetq-server.jar:$HORNETQ_HOME/lib/hornetq-rest.jar:$HORNETQ_HOME/lib/hornetq-ra.jar:$HORNETQ_HOME/lib/hornetq-journal.jar:$HORNETQ_HOME/lib/hornetq-jms-server.jar:$HORNETQ_HOME/lib/hornetq-jms-client.jar:$HORNETQ_HOME/lib/hornetq-jboss-as-integration.jar:$HORNETQ_HOME/lib/hornetq-core-client.jar:$HORNETQ_HOME/lib/hornetq-commons.jar:$HORNETQ_HOME/lib/hornetq-bootstrap.jar:$HORNETQ_CONFIG:$HORNETQ_HOME/schemas/"

export HORNETQ_SCRIPT="java -Djnp.host=$HORNETQ_HOST -Ddata.dir=$HORNETQ_DATA -Dhornetq.remoting.netty.host=$HORNETQ_HOST -XX:+UseParallelGC -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -Xms512M -Xmx1024M -Dhornetq.config.dir=$HORNETQ_CONFIG -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dlogging.configuration=file://$HORNETQ_CONFIG/logging.properties -Djava.library.path=$HORNETQ_HOME/lib/linux-i686:$HORNETQ_HOME/lib/linux-x86_64 -classpath $HORNETQ_CLASSPATH -Dcom.sun.management.jmxremote org.hornetq.integration.bootstrap.HornetQBootstrapServer hornetq-beans.xml >> $HORNETQ_SERVER_LOG 2>&1 & echo \$! > $HORNETQ_PID"

prog=hornetq
RETVAL=0

start() {

        if [ -f /var/lock/subsys/hornetq ] ; then
                if [ -f $HORNETQ_PID ]; then
                        read kpid < $HORNETQ_PID
                        if checkpid $kpid 2>&1; then
                                echo "process already running"
                                exit -1
                        else
                                echo "lock file found but no process running for pid $kpid, continuing"
                        fi
                fi
        fi

    	echo -n $"Starting $prog: "

        if [ -x /etc/rc.d/init.d/functions ]; then
                daemon --user $HORNETQ_USER $HORNETQ_SCRIPT
        else
                su - $HORNETQ_USER -c "$HORNETQ_SCRIPT"
        fi

        RETVAL=$?
        [ $RETVAL = 0 ] && touch /var/lock/subsys/hornetq && success || failure
	echo
        return $RETVAL
}


stop() {
                                                                                                                                                             
    if [ -f /var/lock/subsys/hornetq ] ; then
    	echo -n $"Stopping $prog: "
        count=0;

        if [ -f $HORNETQ_PID ]; then

            read kpid < $HORNETQ_PID
            let kwait=$SHUTDOWN_WAIT

#           Try issuing SIGTERM

            kill -15 $kpid
            until [ `ps --pid $kpid 2> /dev/null | grep -c $kpid 2> /dev/null` -eq '0' ] || [ $count -gt $kwait ]
            do
#               echo "waiting for processes to exit";
                sleep 1
                let count=$count+1;
            done
                                                                                                                                                             
            if [ $count -gt $kwait ]; then
#               echo "killing processes which didn't stop after $SHUTDOWN_WAIT seconds"
                kill -9 $kpid
            fi
        fi
        rm -f /var/lock/subsys/hornetq $HORNETQ_PID
	success
    	echo
    fi
}



# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
	status -p $HORNETQ_PID hornetq
	;;
  restart|reload)
        stop
        sleep 2
        start
        ;;
  condrestart)
        if [ -f $HORNETQ_PID ] ; then
                stop
                start
        fi
        ;;
  *)
        echo "Usage: $0 {start|stop|status|restart|reload|condrestart}"
        exit 1
esac
                                                                                                                                                             
exit $RETVAL

#
#
# end
